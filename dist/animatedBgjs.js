(()=>{var t={302:(t,i,s)=>{const e=s(311);t.exports=class{constructor(t,i,s=150,e=200,n=.017,o,a=0,h={r:0,g:100,b:100,a:.01},r=!0){this.canvas=i,this.context=t,this.maxAmplitude=s,this.wavelength=e,this.y_percent=o,this.y_position=.01*o*this.canvas.height,this.frequency=n,this.angle=a,this.angle>=50?this.angle=50:this.angle<=-50&&(this.angle=-50),this.start_from_zero=r,this.x_position,this.color=h,this.x_position=r?0:this.canvas.width}rotateCoordinates(t,i){const s=this.angle*Math.PI/180,e=t-this.x_position,n=i-this.y_position;return{x:e*Math.cos(s)-n*Math.sin(s)+this.x_position,y:e*Math.sin(s)+n*Math.cos(s)+this.y_position}}calculateY(t,i){return this.y_position-Math.sin(t/this.wavelength+i)*this.maxAmplitude*Math.sin(i)}draw(t){this.canvas.width;const{r:i,g:s,b:n,a:o}=this.color;this.context.strokeStyle=`rgba(${i},${s},${n},${o})`,this.context.beginPath();const a=this.canvas.width/Math.cos(this.angle*Math.PI/180)+2*this.maxAmplitude*Math.cos(this.angle*Math.PI/180);for(let i=0==this.angle?0:-this.maxAmplitude/Math.sin(this.angle*Math.PI/180)*this.angle/Math.abs(this.angle);i<a;i+=30){const s=i,n=this.calculateY(i,t),o=this.rotateCoordinates(s,n).x,a=this.rotateCoordinates(s,n).y;e(o,a,this.context)}for(let i=a-30;i<a;i+=1){const s=i,n=this.calculateY(i,t),o=this.rotateCoordinates(s,n).x,a=this.rotateCoordinates(s,n).y;e(o,a,this.context)}}}},311:t=>{t.exports=function(t,i,s){s.lineTo(t,i),s.stroke()}}},i={};function s(e){var n=i[e];if(void 0!==n)return n.exports;var o=i[e]={exports:{}};return t[e](o,o.exports,s),o.exports}(()=>{const t=s(302);window.AnimatedBg=class{constructor(t,i,s,e){if(!(t instanceof HTMLCanvasElement))throw new Error("Expected a canvas element as the first argument");if("number"!=typeof i||"number"!=typeof s)throw new Error(`Expected typeof height and width: number, got: ${typeof i}, ${typeof i}`);if(!("object"==typeof e&&null!==e&&"r"in e&&"g"in e&&"b"in e))throw new Error("Expected a valid bgColor object with  keys: r, g, b");if(!(Number.isInteger(e.r)&&e.r>=0&&e.r<=255&&Number.isInteger(e.g)&&e.g>=0&&e.g<=255&&Number.isInteger(e.b)&&e.b>=0&&e.b<=255))throw new Error("The keys r, g, b of the bgColor object must have a value between 0 and 255");this.canvas=t,this.parent=this.canvas.parentElement,this.isAnimationRunning=!1,this.canvas.height=this.parent.offsetHeight,this.canvas.width=this.parent.offsetWidth,this.bgColor=e,this.context,this.backgroundsArray=[],this.increment=0,this.frequency=.01}init(){this.context=this.canvas.getContext("2d"),this.context.fillStyle=`rgb(${this.bgColor.r},${this.bgColor.g},${this.bgColor.b})`,this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.fill(),this.increment=0}waveBg(i,s,e,n,o,a,h){const r=new t(this.context,this.canvas,i,s,e,n,o,a,h);this.animate.bind(this)(r)}resizeHandler(t,i){t.canvas.height=this.parent.offsetHeight,t.canvas.width=this.parent.offsetWidth,this.context.fillStyle=`rgb(${this.bgColor.r},${this.bgColor.g},${this.bgColor.b})`,this.context.fillRect(0,0,this.canvas.width,this.canvas.height),i.forEach((i=>{i.y_position=.01*i.y_percent*t.canvas.height,i.start_from_zero?i.x_position=0:i.x_position=t.canvas.width}))}animate(t){const i=this,s=t;i.increment=0,this.backgroundsArray.push(t),addEventListener("resize",(()=>{this.resizeHandler(i,this.backgroundsArray)})),this.isAnimationRunning||(this.isAnimationRunning=!0,function t(){i.backgroundsArray.forEach((t=>{t.draw(i.increment)})),requestAnimationFrame(t),i.context.fillStyle=`rgba(${i.bgColor.r},${i.bgColor.g},${i.bgColor.b},0.03)`,i.context.fillRect(0,0,i.canvas.width,i.canvas.height),i.context.fill(),i.increment+=s.frequency}())}}})()})();